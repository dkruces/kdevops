---
- name: Add a local logical volume for the new export
  ansible.builtin.include_tasks:
    file: storage/local.yml
  when:
    - nfsd_export_storage_local|bool
    - export_fstype != "tmpfs"

- name: Add an iSCSI LUN for the new export
  ansible.builtin.include_tasks:
    file: storage/iscsi.yml
  when:
    - nfsd_export_storage_iscsi|bool
    - export_fstype != "tmpfs"

- name: Add a tmpfs for the new export
  ansible.builtin.include_tasks:
    file: storage/tmpfs.yml
  when:
    - export_fstype == "tmpfs"

- name: Ensure {{ export_volname }} has correct permissions
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  ansible.builtin.file:
    state: directory
    path: "{{ nfsd_export_path }}/{{ export_volname }}"
    owner: "{{ export_user }}"
    group: "{{ export_group }}"
    mode: "{{ export_mode }}"

- name: Test whether SELinux is enabled
  ansible.builtin.command: /usr/sbin/selinuxenabled
  register: selinux_status
  delegate_to: "{{ server_host }}"
  changed_when: false
  failed_when: false

- name: Fix SELinux file context under new mount
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  ansible.builtin.command: /usr/sbin/restorecon -R "{{ nfsd_export_path }}/{{ export_volname }}"
  when: selinux_status.rc == 0

- name: Ensure /etc/exports.d exists
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  ansible.builtin.file:
    state: directory
    path: "/etc/exports.d"
    owner: "root"
    group: "root"
    mode: "644"

- name: Copy export options to a template variable
  ansible.builtin.set_fact:
    template_export_options: "{{ export_options }}"

- name: Check for an fsid= export option
  ansible.builtin.set_fact:
    fsid_is_present: '{{ "fsid=" in export_options }}'
  when:
    - export_fstype == "tmpfs"

- name: Generate a unique fsid
  ansible.builtin.command: "uuidgen -r"
  register: export_fsid
  when:
    - export_fstype == "tmpfs"
    - not fsid_is_present|bool

- name: Add an fsid= export option
  ansible.builtin.set_fact:
    template_export_options: "{{ export_options }},fsid={{ export_fsid.stdout }}"
  when:
    - export_fstype == "tmpfs"
    - not fsid_is_present|bool

- name: Enable pNFS for the new export
  ansible.builtin.set_fact:
    template_export_options: "{{ export_options }},pnfs"
  when:
    - export_pnfs|bool

- name: Create an exports.d file for the new fs
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  ansible.builtin.template:
    src: exports.j2
    dest: /etc/exports.d/{{ export_volname }}.exports
    owner: root
    group: root
    mode: "0644"

- name: Reload the exports table
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  ansible.builtin.command: /usr/sbin/exportfs -ra
