---
- name: Create a new LVM partition
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  community.general.lvol:
    vg: shares
    lv: "{{ share_volname }}"
    size: "{{ share_size }}"
  when:
    - share_fstype != "tmpfs"

- name: Format new volume for {{ share_fstype }}
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  community.general.filesystem:
    fstype: "{{ share_fstype }}"
    dev: "/dev/shares/{{ share_volname }}"
  when:
    - share_fstype != "tmpfs"

- name: Mount volume under {{ smbd_share_path }}
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  throttle: 1 # running this in parallel can clobber fstab changes
  ansible.posix.mount:
    path: "{{ smbd_share_path }}/{{ share_volname }}"
    src: "/dev/shares/{{ share_volname }}"
    fstype: "{{ share_fstype }}"
    state: mounted
  when:
    - share_fstype != "tmpfs"

- name: Mount tmpfs under {{ smbd_share_path }}
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  throttle: 1 # running this in parallel can clobber fstab changes
  ansible.posix.mount:
    path: "{{ smbd_share_path }}/{{ share_volname }}"
    src: "tmpfs"
    fstype: "tmpfs"
    state: mounted
  when:
    - share_fstype == "tmpfs"

- name: Ensure {{ share_volname }} has correct permissions
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  ansible.builtin.file:
    state: directory
    path: "{{ smbd_share_path }}/{{ share_volname }}"
    owner: "{{ share_user }}"
    group: "{{ share_group }}"
    mode: "{{ share_mode }}"

- name: Test whether SELinux is enabled
  ansible.builtin.command: /usr/sbin/selinuxenabled
  register: selinux_status
  delegate_to: "{{ server_host }}"
  changed_when: false
  failed_when: false

- name: Fix SELinux file context under new mount
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  ansible.builtin.command: /usr/sbin/restorecon -R "{{ smbd_share_path }}/{{ share_volname }}"
  when: selinux_status.rc == 0

- name: Create an SMB share for the new fs
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  throttle: 1 # running this in parallel can clobber smb.conf changes
  ansible.builtin.blockinfile:
    dest: /etc/samba/smb.conf
    block: "{{ lookup('template', 'share.j2') }}"
    marker: "; {mark} share configuration for {{ share_volname }}"
    marker_begin: "begin"
    marker_end: "end"
    insertafter: "EOF"

- name: Reload the smb services
  become: true
  become_flags: "su - -c"
  become_method: sudo
  delegate_to: "{{ server_host }}"
  ansible.builtin.systemd_service:
    name: smb.service
    enabled: true
    state: reloaded
