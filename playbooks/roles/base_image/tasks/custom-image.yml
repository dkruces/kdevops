---
- name: Set the pathname of the custom image directory
  ansible.builtin.set_fact:
    custom_image_dir: "{{ kdevops_storage_pool_path }}/guestfs/custom_images/{{ base_image_os_version }}"

- name: Ensure the custom image directory exists
  become: true
  ansible.builtin.file:
    path: "{{ custom_image_dir }}"
    state: directory
    mode: "u=rwx,g=rx,o=rx"

- name: Set the pathname of the custom image
  ansible.builtin.set_fact:
    custom_image: "{{ custom_image_dir }}/{{ base_image_os_version }}.raw"

- name: Set the pathname of the custom image sentinel
  ansible.builtin.set_fact:
    custom_image_ok: "{{ custom_image_dir }}.ok"

- name: Set the pathname of the custom source configuration file
  ansible.builtin.set_fact:
    custom_source: "/etc/virt-builder/repos.d/kdevops-custom-images-{{ base_image_os_version }}.conf"

- name: Set the pathname of the custom index file
  ansible.builtin.set_fact:
    custom_index: "{{ custom_image_dir | realpath }}/index"

- name: Check if the custom image file already exists
  ansible.builtin.stat:
    path: "{{ custom_image }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: custom_image_stat

- name: Fetch the custom image
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.get_url:
    url: "{{ guestfs_custom_raw_image_url }}"
    dest: "{{ custom_image_dir }}"
    mode: "u=rw,g=r,o=r"
  register: custom_image_download
  when:
    - not custom_image_stat.stat.exists
    - guestfs_has_custom_raw_image_url|bool

- name: Verify downloaded image checksum
  when:
    - custom_image_download is changed
    - guestfs_has_custom_raw_image_sha512sums|bool
  block:
    - name: Get the base name of the sha512sums file
      ansible.builtin.set_fact:
        sha512sums_file: "{{ guestfs_custom_raw_image_sha512sums_url | basename }}"

    - name: Set the full pathname of sha512sums file
      ansible.builtin.set_fact:
        custom_image_sha512sum: "{{ custom_image_dir }}/{{ sha512sums_file }}"

    - name: Fetch the sha512sums file
      become: true
      become_method: ansible.builtin.sudo
      ansible.builtin.get_url:
        url: "{{ guestfs_custom_raw_image_sha512sums_url }}"
        dest: "{{ custom_image_dir }}"
        mode: "u=rw,g=r,o=r"

    - name: Verify downloaded image checksum
      ansible.builtin.command:
        cmd: "sha512sum --ignore-missing -c {{ sha512sums_file }}"
        chdir: "{{ custom_image_dir }}"
      changed_when: false

- name: Remove sentinel file when image is redownloaded
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.file:
    path: "{{ custom_image_ok }}"
    state: absent
  when:
    - custom_image_download is changed

- name: Resize custom image to match configured size
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.command:
    cmd: "qemu-img resize {{ custom_image }} {{ libvirt_image_size }}"
  changed_when: true
  when:
    - custom_image_download is changed or custom_image_stat.stat.exists
    - guestfs_has_custom_raw_image_url|bool

- name: Check if the custom image sentinel file already exists
  ansible.builtin.stat:
    path: "{{ custom_image_ok }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: sentinel_stat

- name: Check if template file is newer than sentinel (template updated)
  ansible.builtin.stat:
    path: "{{ role_path }}/templates/virt-builder.j2"
  register: template_stat
  when: sentinel_stat.stat.exists

- name: Generate current configuration hash for workflow packages
  ansible.builtin.set_fact:
    current_config_hash: "{{ (kdevops_workflow_enable_selftests | default(false) | string +
                              kdevops_workflow_enable_fstests | default(false) | string +
                              kdevops_workflow_enable_blktests | default(false) | string +
                              kdevops_workflow_enable_mmtests | default(false) | string +
                              kdevops_workflow_enable_cxl | default(false) | string +
                              kdevops_workflow_enable_pynfs | default(false) | string +
                              kdevops_workflow_enable_sysbench | default(false) | string +
                              distro_debian_based | default(false) | string) | hash('sha256') }}"

- name: Check if configuration hash file exists and matches current config
  ansible.builtin.slurp:
    src: "{{ custom_image_ok }}.hash"
  register: stored_hash_file
  ignore_errors: true
  when: sentinel_stat.stat.exists

- name: Determine if base image needs updating
  ansible.builtin.set_fact:
    needs_base_image_update: "{{ not sentinel_stat.stat.exists or
                                 (sentinel_stat.stat.exists and template_stat.stat.exists and 
                                  template_stat.stat.mtime > sentinel_stat.stat.mtime) or
                                 (sentinel_stat.stat.exists and 
                                  (stored_hash_file is failed or 
                                   (stored_hash_file.content | b64decode | trim) != current_config_hash)) or
                                 (guestfs_has_custom_raw_image_rolling | default(false) and
                                  sentinel_stat.stat.exists and
                                  (ansible_date_time.epoch | int - sentinel_stat.stat.mtime > 86400)) }}"

- name: Debug base image update decision
  ansible.builtin.debug:
    msg: |
      Base image update analysis:
      - Sentinel exists: {{ sentinel_stat.stat.exists }}
      - Template newer: {{ (template_stat.stat.exists and template_stat.stat.mtime > sentinel_stat.stat.mtime) if sentinel_stat.stat.exists else 'N/A' }}
      - Config changed: {{ (stored_hash_file is failed or (stored_hash_file.content | b64decode | trim) != current_config_hash) if sentinel_stat.stat.exists else 'N/A' }}
      - Rolling release daily: {{ (guestfs_has_custom_raw_image_rolling and (ansible_date_time.epoch | int - sentinel_stat.stat.mtime > 86400)) if sentinel_stat.stat.exists else 'N/A' }}
      - Update needed: {{ needs_base_image_update }}
      - Current hash: {{ current_config_hash[:16] }}

- name: Remove sentinel file when update is needed
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ custom_image_ok }}"
    - "{{ custom_image_ok }}.hash"
  when:
    - needs_base_image_update
    - sentinel_stat.stat.exists

- name: Setup custom image for virt-customize
  when:
    - needs_base_image_update
  block:

    - name: Get the UID of the kdevops user on the control host
      ansible.builtin.command:
        cmd: "id -u kdevops"
      register: id_output
      changed_when: false
      failed_when: false
      when:
        - needs_base_image_update

    - name: Set the kdevops UID for custom image
      ansible.builtin.set_fact:
        kdevops_uid: "-u {{ id_output.stdout }}"
      when:
        - needs_base_image_update
        - id_output.rc == 0

    - name: Set default kdevops UID for custom image if user doesn't exist
      ansible.builtin.set_fact:
        kdevops_uid: ""
      when:
        - needs_base_image_update
        - id_output.rc != 0

    - name: Create a temporary file for virt-customize commands
      ansible.builtin.tempfile:
        state: file
      register: custom_command_file
      when:
        - needs_base_image_update

    - name: Construct the virt-customize command file for custom image
      ansible.builtin.template:
        src: "{{ role_path }}/templates/virt-builder.j2"
        dest: "{{ custom_command_file.path }}"
        mode: "u=rw"
      when:
        - needs_base_image_update

    - name: Customize the downloaded image with kdevops user and settings
      become: true
      become_method: ansible.builtin.sudo
      ansible.builtin.command:
        argv:
          - "virt-customize"
          - "-a"
          - "{{ custom_image }}"
          - "--commands-from-file"
          - "{{ custom_command_file.path }}"
      when:
        - libvirt_uri_system|bool
        - needs_base_image_update

    - name: Customize the downloaded image with kdevops user and settings (non-root)
      ansible.builtin.command:
        argv:
          - "virt-customize"
          - "-a"
          - "{{ custom_image }}"
          - "--commands-from-file"
          - "{{ custom_command_file.path }}"
      when:
        - not libvirt_uri_system|bool
        - needs_base_image_update

    - name: Clean up the virt-customize command file
      ansible.builtin.file:
        path: "{{ custom_command_file.path }}"
        state: absent
      when:
        - custom_command_file.path is defined
        - needs_base_image_update

    - name: Touch the custom image sentinel
      become: true
      become_method: ansible.builtin.sudo
      ansible.builtin.file:
        path: "{{ custom_image_ok }}"
        state: touch
        mode: "u=rw,g=r,o=r"
    
    - name: Save configuration hash for future update detection
      become: true
      become_method: ansible.builtin.sudo
      ansible.builtin.copy:
        content: "{{ current_config_hash }}"
        dest: "{{ custom_image_ok }}.hash"
        mode: "u=rw,g=r,o=r"

- name: Check if the custom source exists
  ansible.builtin.stat:
    path: "{{ custom_source }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: custom_source_stat

- name: Build the custom source
  become: true
  ansible.builtin.template:
    src: "{{ role_path }}/templates/custom-source.j2"
    dest: "{{ custom_source }}"
    mode: "u=rw,g=r,o=r"
  when:
    - not custom_source_stat.stat.exists

- name: Check if the custom index exists
  ansible.builtin.stat:
    path: "{{ custom_index }}"
    get_attributes: false
    get_checksum: false
    get_mime: false
  register: custom_index_stat

- name: Build the custom index
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.template:
    src: "{{ role_path }}/templates/custom-index.j2"
    dest: "{{ custom_index }}"
    mode: "u=rw,g=r,o=r"
  when:
    - not custom_index_stat.stat.exists

- name: Show rolling distribution release warning
  ansible.builtin.debug:
    msg: |
      ------------------------------------------------------------------
      This is a rolling distribution release! To upgrade just do:

      rm -rf {{ custom_image }}/*
      rm -f  {{ custom_source }}
      rm -f  {{ custom_index }}

      Running guests always use their own copy. To rebuild your custom
      base image from the custom image, also remove the base image:

      rm -f  ${BASE_IMAGE}

      This can always be done safely without affecting running guests.
      ------------------------------------------------------------------
  when:
    - guestfs_has_custom_raw_image_rolling|bool

- name: Show the custom virt-builder database
  ansible.builtin.debug:
    msg: |
      Custom virt-builder source: {{ custom_source }}
      Custom virt-builder index: {{ custom_index }}
      Custom virt-builder image: {{ custom_image }}

- name: Generating the index for {{ base_image_os_version }}
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.command:
    argv:
      - "virt-builder-repository"
      - "--no-compression"
      - "{{ custom_image_dir }}"
  changed_when: true
