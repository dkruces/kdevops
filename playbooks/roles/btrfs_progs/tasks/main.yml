---
- name: Import optional extra_args file
  ansible.builtin.include_vars: "{{ item }}"
  ignore_errors: true
  with_first_found:
    - files:
        - "../extra_vars.yml"
        - "../extra_vars.yaml"
        - "../extra_vars.json"
      skip: true
  tags: vars

- ansible.builtin.include_role:
    name: create_data_partition
  tags: ["data_partition"]

- name: Install build-deps for btrfs_progs as per each Linux distribution
  ansible.builtin.include_tasks: install-deps/main.yml
  when:
    - btrfs_progs_build|bool

- name: Assume we won't build btrfs_progs first
  ansible.builtin.set_fact:
    build_btrfs_progs_now: false
  tags: vars

- name: Annotate when we are building btrfs_progs
  ansible.builtin.set_fact:
    build_btrfs_progs_now: true
  when:
    - btrfs_progs_build|bool
  tags: vars

- name: Set bindir for debian systems
  ansible.builtin.set_fact:
    bindir: "/usr/bin"
  when: ansible_facts['os_family']|lower == 'debian'
  tags: vars

- name: Set bindir for non-debian systems
  ansible.builtin.set_fact:
    bindir: "/usr/sbin"
  when: ansible_facts['os_family']|lower != 'debian'
  tags: vars

- name: Git clone btrfs_progs
  environment:
    GIT_SSL_NO_VERIFY: true
  ansible.builtin.git:
    repo: "{{ btrfs_progs_git }}"
    dest: "{{ btrfs_progs_data }}"
    version: "{{ btrfs_progs_version }}"
  when:
    - build_btrfs_progs_now|bool

- name: Run make clean-all for btrfs_progs
  community.general.make:
    chdir: "{{ btrfs_progs_data }}"
    target: clean-all
  ignore_errors: true

- name: Run autogen.sh for btrfs_progs
  ansible.builtin.command: "./autogen.sh"
  tags: ["btrfs_progs", "configure"]
  args:
    chdir: "{{ btrfs_progs_data }}"
  when:
    - build_btrfs_progs_now|bool

- name: Run configure for btrfs_progs
  ansible.builtin.command: "./configure --disable-documentation --enable-experimental --bindir={{ bindir }} --prefix=/usr --exec-prefix=/usr --disable-python"
  tags: ["btrfs_progs", "configure"]
  args:
    chdir: "{{ btrfs_progs_data }}"
  when:
    - build_btrfs_progs_now|bool

- name: Get nproc
  ansible.builtin.command: "{{ num_jobs }}"
  tags: ["btrfs_progs", "configure"]
  register: nproc
  when:
    - build_btrfs_progs_now|bool

- name: Build btrfs_progs
  community.general.make:
    chdir: "{{ btrfs_progs_data }}"
    jobs: "{{ nproc.stdout }}"
  tags: ["btrfs_progs", "build"]
  when:
    - build_btrfs_progs_now|bool

- name: Install btrfs_progs
  become: true
  become_flags: "su - -c"
  become_method: sudo
  ansible.builtin.command: "{{ make }} install"
  args:
    chdir: "{{ btrfs_progs_data }}"
  tags: ["btrfs_progs", "install"]
  when:
    - build_btrfs_progs_now|bool
