---
# NVMe OCP SMART monitoring startup
- name: Check if NVMe OCP SMART monitoring is enabled
  ansible.builtin.set_fact:
    nvme_ocp_smart_enabled: "{{ monitor_nvme_ocp_smart|default(false)|bool }}"

- name: Create monitoring directory for OCP SMART logs
  ansible.builtin.file:
    path: /root/monitoring
    state: directory
    mode: '0755'
  become: true
  become_method: sudo
  when:
    - enable_monitoring|default(false)|bool
    - nvme_ocp_smart_enabled|bool

- name: Discover NVMe devices for OCP SMART monitoring
  become: true
  become_method: sudo
  ansible.builtin.shell: |
    if [ "{{ monitor_nvme_ocp_smart_devices }}" = "auto" ]; then
      # Test OCP compatibility for each NVMe device
      ocp_devices=""
      for dev in $(find /dev -name 'nvme*n*' -type b 2>/dev/null | head -10); do
        if /usr/sbin/nvme ocp smart-add-log --output-format=json "$dev" >/dev/null 2>&1; then
          ocp_devices="$ocp_devices$dev\n"
        fi
      done
      echo -e "$ocp_devices" | grep -v '^$' || true
    else
      echo "{{ monitor_nvme_ocp_smart_devices }}"
    fi
  register: nvme_ocp_devices_discovery
  changed_when: false
  failed_when: false
  when:
    - enable_monitoring|default(false)|bool
    - nvme_ocp_smart_enabled|bool

- name: Set NVMe OCP devices list for monitoring
  ansible.builtin.set_fact:
    nvme_ocp_devices_list: "{{ nvme_ocp_devices_discovery.stdout_lines|default([]) }}"
  when:
    - enable_monitoring|default(false)|bool
    - nvme_ocp_smart_enabled|bool

- name: Display discovered NVMe OCP devices
  ansible.builtin.debug:
    msg: "Found {{ nvme_ocp_devices_list|length }} NVMe devices for OCP SMART monitoring: {{ nvme_ocp_devices_list|join(', ') }}"
  when:
    - enable_monitoring|default(false)|bool
    - nvme_ocp_smart_enabled|bool
    - nvme_ocp_devices_list is defined

- name: Start NVMe OCP SMART monitoring for each device
  become: true
  become_method: sudo
  ansible.builtin.shell: |
    device_name=$(basename {{ item }} | sed 's/\//_/g')
    nohup bash -c '
      while true; do
        echo "$(date "+%Y-%m-%d %H:%M:%S")"
        /usr/sbin/nvme ocp smart-add-log --output-format=json {{ item }} 2>/dev/null || echo "{\"error\":\"ocp_command_failed\",\"device\":\"{{ item }}\",\"timestamp\":\"$(date "+%Y-%m-%d %H:%M:%S")\"}"
        echo ""
        sleep {{ monitor_nvme_ocp_smart_interval|default(120) }}
      done
    ' > /root/monitoring/nvme_ocp_smart_${device_name}_stats.txt 2>&1 &
    echo $! > /root/monitoring/nvme_ocp_smart_${device_name}.pid
  loop: "{{ nvme_ocp_devices_list }}"
  when:
    - enable_monitoring|default(false)|bool
    - nvme_ocp_smart_enabled|bool
    - nvme_ocp_devices_list|length > 0

- name: Display NVMe OCP SMART monitoring startup status
  ansible.builtin.debug:
    msg: |
      Started NVMe OCP SMART monitoring for {{ nvme_ocp_devices_list|length }} devices:
      {% for device in nvme_ocp_devices_list %}
      - {{ device }}
      {% endfor %}
      Monitoring interval: {{ monitor_nvme_ocp_smart_interval|default(120) }} seconds
  when:
    - enable_monitoring|default(false)|bool
    - nvme_ocp_smart_enabled|bool
    - nvme_ocp_devices_list|length > 0
