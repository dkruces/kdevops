# SPDX-License-Identifier: copyleft-next-0.3.1

config ENABLE_MONITORING
	bool "Enable monitoring services during workflow execution"
	output yaml
	default n
	help
	  Enable monitoring services to collect statistics during workflow
	  execution. This allows collection of various system metrics while
	  workflows are running.

	  Monitoring services run in the background during test execution and
	  automatically collect results afterward. The collected data can be
	  used for performance analysis, debugging, and understanding system
	  behavior during tests.

	  Individual workflows must add support for monitoring integration.
	  Currently supported workflows:
	  - fstests

if ENABLE_MONITORING

config MONITOR_DEVELOPMENTAL_STATS
	bool "Enable developmental statistics (not yet upstream)"
	output yaml
	default n
	help
	  Enable collection of statistics that are still in development
	  and not yet merged upstream in the Linux kernel.

	  This is useful for testing and validating new kernel features
	  that provide additional debugging or performance metrics.

if MONITOR_DEVELOPMENTAL_STATS

config MONITOR_FOLIO_MIGRATION
	bool "Monitor folio migration statistics"
	output yaml
	default n
	help
	  Enable monitoring of folio migration statistics if available.
	  This requires the kernel to have the folio migration debugfs
	  stats patch applied.

	  The statistics are collected from:
	  /sys/kernel/debug/mm/migrate/stats

	  This feature collects migration statistics periodically during
	  workflow execution and can generate plots for visualization.

config MONITOR_FOLIO_MIGRATION_INTERVAL
	int "Folio migration monitoring interval (seconds)"
	output yaml
	default 60
	depends on MONITOR_FOLIO_MIGRATION
	help
	  How often to collect folio migration statistics in seconds.
	  Default is 60 seconds.

	  Lower values provide more granular data but may impact system
	  performance. Higher values reduce overhead but may miss
	  short-lived migration events.

endif # MONITOR_DEVELOPMENTAL_STATS

config MONITOR_NVME_SMART_LOG
	bool "Monitor NVMe SMART Log statistics"
	output yaml
	default n
	help
	  Enable monitoring of NVMe SMART Log statistics using standard nvme-cli
	  tools.

	  Requires:
	  - nvme-cli tools installed (nvme command available)
	  - NVMe devices supporting SMART log queries
	  - Root privileges for nvme command execution

	  Collects statistics from: nvme smart-log --output-format=json

	  The collected data includes:
	  - Device health: temperature, available spare, percentage used
	  - Performance: data units read/written, host commands
	  - Reliability: media errors, power cycles, unsafe shutdowns
	  - Thermal management: temperature warning and critical times

config MONITOR_NVME_SMART_LOG_INTERVAL
	int "NVMe SMART Log monitoring interval (seconds)"
	output yaml
	default 60
	depends on MONITOR_NVME_SMART_LOG
	range 20 3600
	help
	  How often to collect NVMe SMART Log statistics in seconds.
	  Default is 60 seconds (1 minute).

	  Lower values provide more granular data but may impact system
	  performance. Higher values reduce overhead but may miss
	  short-lived device behavior changes.

config MONITOR_NVME_SMART_LOG_DEVICES
	string "NVMe devices to monitor (space-separated)"
	output yaml
	default "auto"
	depends on MONITOR_NVME_SMART_LOG
	help
	  Space-separated list of NVMe devices to monitor (e.g., "/dev/nvme0n1 /dev/nvme1n1").

	  Use "auto" to automatically discover all available NVMe devices.

config MONITOR_NVME_OCP_SMART
	bool "Monitor NVMe OCP extended SMART statistics"
	output yaml
	default n
	help
	  Enable monitoring of NVMe OCP (Open Compute Project) extended SMART
	  statistics using nvme-cli OCP plugin.

	  Requires:
	  - nvme-cli tools with OCP plugin support
	  - OCP-compatible NVMe devices (cloud SSDs)
	  - Root privileges for nvme command execution

	  Collects extended statistics from: nvme ocp smart-add-log --output-format=json

	  The collected data includes cloud SSD specific metrics:
	  - Advanced wear leveling data (erase counts, bad blocks)
	  - Extended reliability metrics (ECC errors, XOR recovery)
	  - Thermal throttling and power management data
	  - Capacitor health and power loss protection status
	  - PCIe error counters and endurance estimates

	  This provides much more detailed telemetry than standard SMART logs
	  but only works with OCP-compatible cloud SSD hardware.

config MONITOR_NVME_OCP_SMART_INTERVAL
	int "NVMe OCP SMART monitoring interval (seconds)"
	output yaml
	default 120
	depends on MONITOR_NVME_OCP_SMART
	range 60 3600
	help
	  How often to collect NVMe OCP SMART statistics in seconds.
	  Default is 120 seconds (2 minutes).

	  OCP SMART data changes more slowly than standard SMART metrics,
	  so longer intervals are appropriate. Shorter intervals may not
	  provide meaningful additional data and increase system overhead.

config MONITOR_NVME_OCP_SMART_DEVICES
	string "NVMe OCP devices to monitor (space-separated)"
	output yaml
	default "auto"
	depends on MONITOR_NVME_OCP_SMART
	help
	  Space-separated list of OCP-compatible NVMe devices to monitor.

	  Use "auto" to automatically discover OCP-compatible devices by
	  testing nvme ocp smart-add-log capability.

	  Manual specification: "/dev/nvme0n1 /dev/nvme1n1"

# Future monitoring options can be added here
# Examples:
# - Memory pressure monitoring
# - CPU utilization tracking
# - I/O statistics collection
# - Network traffic monitoring
# - Custom perf event monitoring

endif # ENABLE_MONITORING
