---
- name: Import optional extra_args file
  include_vars: "{{ item }}"
  ignore_errors: true
  with_first_found:
    - files:
        - "../extra_vars.yml"
        - "../extra_vars.yaml"
        - "../extra_vars.json"
      skip: true
  tags: vars

# The only difference between the non-libvirt_session (most distros)
# and libvirt_session case (Fedora) is we use sudo for non-libvirt_session
# There may be a way to not duplicate these and just use sudo for the
# non-libvirt_session case.

- name: Verify if the pool already exists
  become: true
  become_method: sudo
  command:
    cmd: "virsh pool-info {{ libvirt_storage_pool_name }}"
  register: pool_check
  failed_when: pool_check.rc != 0 and pool_check.rc != 1
  changed_when: pool_check.rc == 0 or pool_check.rc == 1
  when:
    - "not libvirt_session|bool"
    - "libvirt_storage_pool_create|bool"

- name: Create {{ libvirt_storage_pool_name }} pool if it does not exist
  become: true
  become_method: sudo
  command:
    cmd: "virsh pool-define-as {{ libvirt_storage_pool_name }} dir --target {{ libvirt_storage_pool_path }}"
  when:
    - "not libvirt_session|bool"
    - "libvirt_storage_pool_create|bool"
    - pool_check.rc == 1

- name: Start {{ libvirt_storage_pool_name }} pool
  become: true
  become_method: sudo
  command:
    cmd: "virsh pool-start {{ libvirt_storage_pool_name }}"
  when:
    - "not libvirt_session|bool"
    - "libvirt_storage_pool_create|bool"
    - pool_check.rc == 1

- name: Set pool {{ libvirt_storage_pool_name }} to auto-start
  become: true
  become_method: sudo
  command:
    cmd: "virsh  pool-autostart {{ libvirt_storage_pool_name }}"
  when:
    - "not libvirt_session|bool"
    - "libvirt_storage_pool_create|bool"
    - pool_check.rc == 1

- name: Verify if the pool already exists
  command:
    cmd: "virsh pool-info {{ libvirt_storage_pool_name }}"
  register: pool_check
  failed_when: pool_check.rc != 0 and pool_check.rc != 1
  changed_when: pool_check.rc == 0 or pool_check.rc == 1
  when:
    - "libvirt_session|bool"
    - "libvirt_storage_pool_create|bool"

- name: Create {{ libvirt_storage_pool_name }} pool if it does not exist
  command:
    cmd: "virsh pool-define-as {{ libvirt_storage_pool_name }} dir --target {{ libvirt_storage_pool_path }}"
  when:
    - "libvirt_session|bool"
    - "libvirt_storage_pool_create|bool"
    - pool_check.rc == 1

- name: Start {{ libvirt_storage_pool_name }} pool
  command:
    cmd: "virsh pool-start {{ libvirt_storage_pool_name }}"
  when:
    - "libvirt_session|bool"
    - "libvirt_storage_pool_create|bool"
    - pool_check.rc == 1

- name: Set pool {{ libvirt_storage_pool_name }} to auto-start
  command:
    cmd: "virsh  pool-autostart {{ libvirt_storage_pool_name }}"
  when:
    - "libvirt_session|bool"
    - "libvirt_storage_pool_create|bool"
    - pool_check.rc == 1
