---
# Install dependenciesfor oscheck on Red Hat based systems

- name: Register system with Red Hat
  become: true
  community.general.redhat_subscription:
    state: present
    org_id: "{{ rhel_org_id }}"
    activationkey: "{{ rhel_activation_key }}"
    force_register: true
  when:
    - rhel_org_id
    - rhel_activation_key

- name: Check whether custom repofile exists
  ansible.builtin.stat:
    path: "{{ devconfig_custom_yum_repofile }}"
  register: custom_repofile
  delegate_to: localhost
  when: devconfig_custom_yum_repofile

- name: Add custom yum repo
  become: true
  become_method: sudo
  ansible.builtin.copy:
    src: "{{ devconfig_custom_yum_repofile }}"
    dest: "/etc/yum.repos.d/{{ devconfig_custom_yum_repofile | basename }}"
    owner: root
    group: root
    mode: "0644"
  when:
    - devconfig_custom_yum_repofile
    - custom_repofile.stat.exists

- name: Discover the fastest package update mirrors
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.lineinfile:
    insertafter: "[main]"
    line: "fastestmirror=true"
    path: "/etc/dnf/dnf.conf"
    state: present

- name: Increase the maximum number of concurrent package downloads
  become: true
  become_method: ansible.builtin.sudo
  ansible.builtin.lineinfile:
    insertafter: "[main]"
    line: "max_parallel_downloads=10"
    path: "/etc/dnf/dnf.conf"
    state: present

- name: Refresh cache and upgrade all present packages
  become: true
  become_method: sudo
  ansible.builtin.dnf:
    update_cache: true
    name: "*"
    state: latest
  retries: 3
  delay: 5
  register: result
  until: result is succeeded
  when:
    - devconfig_try_upgrade|bool

- name: Reboot system to make the new kernel and modules take effect
  become: true
  become_method: sudo
  ansible.builtin.reboot:
  when:
    - devconfig_try_upgrade|bool

- name: Enable installation of packages from EPEL
  ansible.builtin.include_role:
    name: epel-release
  when:
    - ansible_distribution != "Fedora"

- name: Build install package list
  ansible.builtin.set_fact:
    packages:
      - bison
      - flex
      - git-core
      - e2fsprogs
      - xfsprogs
      - xfsdump
      - lvm2
      - gcc
      - make
      - gawk
      - bc
      - libtool
      - psmisc
      - sed
      - vim
      - fio
      - libaio-devel
      - diffutils
      - net-tools
      - ncurses-devel
      - openssh-server
      - net-snmp
      - trace-cmd
      - perf
  when:
    - devconfig_try_install_kdevtools|bool

- name: Add btrfs-progs to install package list
  ansible.builtin.set_fact:
    packages: "{{ packages + ['btrfs-progs'] }}"
  when:
    - devconfig_try_install_kdevtools|bool
    - ansible_distribution == 'Fedora'

- name: Add GNU screen to install package list
  ansible.builtin.set_fact:
    packages: "{{ packages + ['screen'] }}"
  when:
    - devconfig_try_install_kdevtools|bool
    - ansible_facts['os_family']|lower != 'redhat' or ansible_facts['distribution_major_version'] | int < 8

- name: Add Tmux to install package list
  ansible.builtin.set_fact:
    packages: "{{ packages + ['tmux'] }}"
  when:
    - devconfig_try_install_kdevtools|bool
    - ansible_facts['os_family']|lower == 'redhat' or ansible_facts['distribution_major_version'] | int >= 8

- name: Install packages we typically care about
  become: true
  become_method: sudo
  ansible.builtin.dnf:
    update_cache: true
    name: "{{ packages }}"
  retries: 3
  delay: 5
  register: result
  until: result is succeeded
  when:
    - devconfig_try_install_kdevtools|bool

- name: Set up snmp
  become: true
  become_method: sudo
  ansible.builtin.template:
    src: snmpd.conf
    dest: /etc/snmp/snmpd.conf
  when:
    - devconfig_try_install_kdevtools|bool
  tags: snmpd

- name: Enable snmpd service
  become: true
  become_method: sudo
  ansible.builtin.systemd:
    name: snmpd
    enabled: true
    masked: false
  tags: snmpd
  when:
    - devconfig_try_install_kdevtools|bool

- name: Start snmpd service
  become: true
  become_method: sudo
  ansible.builtin.systemd:
    name: snmpd
    state: restarted
  tags: snmpd
  when:
    - devconfig_try_install_kdevtools|bool

- name: Install systemd-journal-remote
  become: true
  become_method: sudo
  ansible.builtin.dnf:
    update_cache: true
    name: "systemd-journal-remote"
  retries: 3
  delay: 5
  register: result
  until: result is succeeded
  when:
    - devconfig_enable_systemd_journal_remote|bool
    - ansible_facts['os_family']|lower == 'redhat' or ansible_facts['distribution_major_version'] | int >= 8
  tags: journal

- name: Install systemd-timesyncd
  become: true
  become_method: sudo
  ansible.builtin.dnf:
    update_cache: true
    name: systemd-udev
  retries: 3
  delay: 5
  register: result
  until: result is succeeded
  when:
    - devconfig_enable_systemd_timesyncd|bool
  tags: timesyncd
