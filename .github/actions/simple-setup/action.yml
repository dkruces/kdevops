# SPDX-License-Identifier: GPL-2.0
---
name: Simple Setup
description: Simple setup with working directory using run_id

inputs:
  ci_workflow:
    required: true
    type: string
    default: 'blktests_nvme'
  work_dir:
    description: 'Working directory (should include run_id)'
    required: true

runs:
  using: "composite"
  steps:
    - name: Verify checkout directory
      shell: bash
      run: |
        set -euxo pipefail
        echo "Working directory: ${{ inputs.work_dir }}"
        echo "CI workflow: ${{ inputs.ci_workflow }}"
        echo "GitHub run ID: ${{ github.run_id }}"
        
        # Verify the checkout worked correctly
        if [[ ! -d "${{ inputs.work_dir }}" ]]; then
          echo "✗ Checkout directory does not exist: ${{ inputs.work_dir }}"
          exit 1
        fi
        
        echo "✓ Checkout directory exists"
        ls -la "${{ inputs.work_dir }}/"

    - name: Basic git configuration
      shell: bash
      run: |
        set -euxo pipefail
        git config --global --add safe.directory '*'
        git config --global user.name "kdevops-simple"
        git config --global user.email "kdevops@example.com"

    - name: Check defconfig exists
      shell: bash
      working-directory: ${{ inputs.work_dir }}
      run: |
        set -euxo pipefail
        echo "Checking for defconfig: ${{ inputs.ci_workflow }}"
        
        if [[ -f "defconfigs/${{ inputs.ci_workflow }}" ]]; then
          echo "✓ Found defconfig: defconfigs/${{ inputs.ci_workflow }}"
        else
          echo "✗ Missing defconfig: defconfigs/${{ inputs.ci_workflow }}"
          echo "Available defconfigs:"
          ls -1 defconfigs/ | head -10
          exit 1
        fi

    - name: Simple defconfig setup
      shell: bash  
      working-directory: ${{ inputs.work_dir }}
      run: |
        set -euxo pipefail
        echo "Setting up simple configuration..."
        
        # Use a simple host prefix with run_id
        HOST_PREFIX="simple-${{ github.run_id }}"
        echo "Host prefix: $HOST_PREFIX"
        
        # Try to run defconfig
        make "KDEVOPS_HOSTS_PREFIX=$HOST_PREFIX" "defconfig-${{ inputs.ci_workflow }}" || {
          echo "Defconfig failed, listing available configs..."
          ls -la defconfigs/
          exit 1
        }
        
        echo "✓ Configuration completed successfully"