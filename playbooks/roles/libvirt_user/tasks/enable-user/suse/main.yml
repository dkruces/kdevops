---
- name: Adds the user to the respective distro libvirt groups
  become: true
  become_method: sudo
  ansible.builtin.user:
    name: "{{ ansible_env.USER }}"
    groups: libvirt,kvm,qemu
    append: true
  when:
    - not libvirt_session
    - not only_verify_user|bool

- name: Check if apparmor_status exists
  ansible.builtin.stat:
    path: /usr/sbin/apparmor_status
  register: apparmor_file_stat_result
  when: "only_verify_user|bool"

- name: Verify if apparmor is disabled when applicable
  become: true
  become_method: sudo
  ansible.builtin.command:
    cmd: /usr/sbin/apparmor_status --enabled
  register: apparmor_check
  failed_when: apparmor_check.rc == 0
  when:
    - "only_verify_user|bool"
    - "apparmor_file_stat_result.stat.exists"

- name: Verifies user's effective group allows to run libvirt/kvm without being root
  ansible.builtin.shell: groups | grep {{ item }}
  with_items:
    - libvirt
    - kvm
    - qemu
  loop_control:
    label: "Verifying if user's current effective groups includes {{ item }}"
  register: group_check
  failed_when: false
  ignore_errors: true
  when:
    - not libvirt_session
    - only_verify_user|bool

- name: Inform if user must log out and back in to use libvirt as a regular user
  register: user_groups_ready
  ansible.builtin.debug:
    msg: "User group settings are not in effect, you must log out and back in to make group {{ item.item }} be part of your effective group"
  failed_when: item.rc is undefined or item.rc != 0
  when:
    - not libvirt_session
    - only_verify_user|bool
    - item.rc != 0
  loop: "{{ group_check.results }}"
  loop_control:
    label: "Ensure if user's current effective groups includes {{ item.item }}"
